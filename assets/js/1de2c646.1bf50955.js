"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[560],{1591:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"Publishing","title":"Publishing your website","description":"It\'s easy","source":"@site/docs/Publishing.md","sourceDirName":".","slug":"/Publishing","permalink":"/moonwave/docs/Publishing","draft":false,"unlisted":false,"editUrl":"https://github.com/evaera/moonwave/edit/master/website/docs/Publishing.md","tags":[],"version":"current","lastUpdatedBy":"Matyas Angyal","lastUpdatedAt":1731729195000,"sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"defaultSidebar","previous":{"title":"Static Files","permalink":"/moonwave/docs/StaticFiles"}}');var s=i(4848),o=i(8453);const r={sidebar_position:6},a="Publishing your website",c={},u=[{value:"It&#39;s easy",id:"its-easy",level:2},{value:"If your master branch is not <code>master</code>",id:"if-your-master-branch-is-not-master",level:2},{value:"Using a custom domain / Not Using Github Pages",id:"using-a-custom-domain--not-using-github-pages",level:2},{value:"Github Pages Custom Domain CNAME file",id:"github-pages-custom-domain-cname-file",level:2},{value:"Using GitHub Actions",id:"using-github-actions",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"publishing-your-website",children:"Publishing your website"})}),"\n",(0,s.jsx)(n.h2,{id:"its-easy",children:"It's easy"}),"\n",(0,s.jsx)(n.p,{children:"If you are using git and Github pages, you can publish your doc website with one command:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"moonwave build --publish"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Otherwise, you can run ",(0,s.jsx)(n.code,{children:"moonwave build"}),", and your built website will be in a folder called ",(0,s.jsx)(n.code,{children:"build"})," in your project directory."]}),"\n",(0,s.jsxs)(n.p,{children:["Additionally, you can also specify the ",(0,s.jsx)(n.code,{children:"--out-dir [path]"})," argument to set the build directory to a different path other than the default ",(0,s.jsx)(n.code,{children:"build"})," directory."]}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["Remember to add the ",(0,s.jsx)(n.code,{children:"build"})," folder to your ",(0,s.jsx)(n.code,{children:".gitignore"}),"!"]})}),"\n",(0,s.jsxs)(n.h2,{id:"if-your-master-branch-is-not-master",children:["If your master branch is not ",(0,s.jsx)(n.code,{children:"master"})]}),"\n",(0,s.jsxs)(n.p,{children:["Moonwave needs to know your master branch to make the \"Edit this page\" links work. We don't detect the correct master branch right now, so by default we assume it's ",(0,s.jsx)(n.code,{children:"master"}),". If this is wrong, you should configure it in ",(0,s.jsx)(n.a,{href:"Configuration",children:(0,s.jsx)(n.code,{children:"moonwave.toml"})}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'gitSourceBranch = "main"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"using-a-custom-domain--not-using-github-pages",children:"Using a custom domain / Not Using Github Pages"}),"\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.a,{href:"Configuration",children:"Configuration"}),", you'll note two options:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[docusaurus]\r\nurl = "https://organizationName.github.io"\r\nbaseUrl = "/projectName"\n'})}),"\n",(0,s.jsx)(n.p,{children:"These are the defaults. If you're hosting your website on a custom domain, or you aren't using Github Pages, these defaults will be incorrect."}),"\n",(0,s.jsxs)(n.p,{children:["In that case, you ",(0,s.jsx)(n.strong,{children:"must"})," create a ",(0,s.jsx)(n.code,{children:"moonwave.toml"})," file and configure these options correctly."]}),"\n",(0,s.jsx)(n.p,{children:"Even if you are using Github Pages, and:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"you're using a custom domain, or"}),"\n",(0,s.jsxs)(n.li,{children:["you're hosting the website on the root path (",(0,s.jsx)(n.code,{children:"organizationName.github.io"}),", instead of ",(0,s.jsx)(n.code,{children:"organizationName.github.io/projectName"}),")"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["...you need to configure both of these options, ",(0,s.jsxs)(n.strong,{children:["and set ",(0,s.jsx)(n.code,{children:'baseUrl = "/"'})]})]}),"\n",(0,s.jsx)(n.h2,{id:"github-pages-custom-domain-cname-file",children:"Github Pages Custom Domain CNAME file"}),"\n",(0,s.jsxs)(n.p,{children:["Github Pages requires you to create a CNAME file in your website to host on a custom domain. You should create this file at ",(0,s.jsx)(n.code,{children:"yourProjectRoot/.moonwave/static/CNAME"})," (create the folders if they don't exist) and put your domain in the file."]}),"\n",(0,s.jsx)(n.h2,{id:"using-github-actions",children:"Using GitHub Actions"}),"\n",(0,s.jsxs)(n.p,{children:["You can create a GitHub Actions workflow to automatically publish your docs webiste to GitHub Pages. To begin, you need to create a new workflow in the ",(0,s.jsx)(n.code,{children:".github/workflows"})," directory of your repository that will build and publish your website."]}),"\n",(0,s.jsxs)(n.p,{children:["Here is an example of such a workflow where the job will run on each push to the ",(0,s.jsx)(n.code,{children:"master"})," branch:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# .github/workflows/publish-docs.yml\r\nname: publish-docs\r\non:\r\n  push:\r\n    branches: ["master"]\r\njobs:\r\n  status:\r\n    runs-on: ubuntu-latest\r\n    name: Publish docs to GitHub Pages\r\n    steps:\r\n      - uses: actions/checkout@v4\r\n      - uses: actions/setup-node@v4\r\n        with:\r\n          node-version: "22"\r\n      - run: npm i -g moonwave@latest\r\n      - name: Publish\r\n        run: |\r\n          git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git\r\n          git config --global user.email "support+actions@github.com"\r\n          git config --global user.name "github-actions-bot"\r\n          moonwave build --publish\r\n        env:\r\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(6540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);