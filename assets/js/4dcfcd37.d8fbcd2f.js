"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[399],{488:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"Configuration","title":"Configuration","description":"moonwave.toml","source":"@site/docs/Configuration.md","sourceDirName":".","slug":"/Configuration","permalink":"/moonwave/docs/Configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/evaera/moonwave/edit/master/website/docs/Configuration.md","tags":[],"version":"current","lastUpdatedBy":"Peter Lundberg","lastUpdatedAt":1721255535000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"defaultSidebar","previous":{"title":"Docs, Blog and Custom Pages","permalink":"/moonwave/docs/Docs"},"next":{"title":"Static Files","permalink":"/moonwave/docs/StaticFiles"}}');var s=o(4848),r=o(8453);const a={sidebar_position:4},i="Configuration",c={},l=[{value:"moonwave.toml",id:"moonwavetoml",level:2},{value:"Docusaurus options",id:"docusaurus-options",level:2},{value:"Custom navbar options",id:"custom-navbar-options",level:2},{value:"API Class Order",id:"api-class-order",level:2},{value:"Sections",id:"sections",level:3},{value:"Automatic Sections from Folders",id:"automatic-sections-from-folders",level:4},{value:"Table of Contents (TOC)",id:"table-of-contents-toc",level:3},{value:"Custom home page",id:"custom-home-page",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,s.jsx)(n.h2,{id:"moonwavetoml",children:"moonwave.toml"}),"\n",(0,s.jsxs)(n.p,{children:["You can customize how Moonwave behaves by creating a ",(0,s.jsx)(n.code,{children:"moonwave.toml"})," file in the root of your project."]}),"\n",(0,s.jsxs)(n.p,{children:["Here's a sample ",(0,s.jsx)(n.code,{children:"moonwave.toml"})," with default properties. Every property listed here is optional."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Options annotated with the comment ",(0,s.jsx)(n.code,{children:"# From Git"})," mean that property is automatically filled in from your Git repository."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'title = "MyProjectName"  # From Git\r\ngitRepoUrl = "https://github.com/evaera/moonwave" # From Git\r\n\r\ngitSourceBranch = "master"\r\nchangelog = true\r\nclassOrder = []\r\n\r\n[docusaurus]\r\nonBrokenLinks = "throw"\r\nonBrokenMarkdownLinks = "warn"\r\nfavicon = ""\r\n\r\n# From git:\r\norganizationName = "AuthorName"\r\nprojectName = "MyProjectName"\r\nurl = "https://AuthorName.github.io"\r\nbaseUrl = "/MyProjectName"\r\ntagline = "Your project\'s tagline"\r\n\r\n[footer]\r\nstyle = "dark"\r\ncopyright = "Copyright \xa9 2021 AuthorName. Built with Moonwave and Docusaurus"\r\n\r\n[[footer.links]]\r\ntitle = "examples"\r\n\r\n[[footer.links.items]]\r\nlabel = "example"\r\nhref = "https://example.com/"\r\n\n'})}),"\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"/docs/Publishing",children:"the publishing guide"})," for details on the ",(0,s.jsx)(n.code,{children:"url"})," and ",(0,s.jsx)(n.code,{children:"baseUrl"})," options."]}),"\n",(0,s.jsx)(n.h2,{id:"docusaurus-options",children:"Docusaurus options"}),"\n",(0,s.jsxs)(n.p,{children:["The options in the ",(0,s.jsx)(n.code,{children:"[docusaurus]"})," section are directly passed to the Docusaurus options. For more information, please see the ",(0,s.jsx)(n.a,{href:"https://docusaurus.io/docs/docusaurus.config.js",children:"Docusaurus docs"})]}),"\n",(0,s.jsx)(n.h2,{id:"custom-navbar-options",children:"Custom navbar options"}),"\n",(0,s.jsx)(n.p,{children:"You can add custom navbar options like so:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[[navbar.items]]\r\nhref = "https://discord.gg/abcdefghijk"\r\nlabel = "Discord"\r\nposition = "right"\r\n\r\n[[navbar.items]]\r\nhref = "https://???"\r\nlabel = "Something Else"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"api-class-order",children:"API Class Order"}),"\n",(0,s.jsxs)(n.p,{children:["You can customize the order that classes appear in the API section with the ",(0,s.jsx)(n.code,{children:"classOrder"})," option. In ",(0,s.jsx)(n.code,{children:"moonwave.toml"}),", specify:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'classOrder = [\r\n\t"MyClass",\r\n\t"Sample"\r\n]\n'})}),"\n",(0,s.jsx)(n.p,{children:"Any classes not listed here will be alphabetized and added to the end of the list. Listing a class that doesn't exist is an error."}),"\n",(0,s.jsx)(n.h3,{id:"sections",children:"Sections"}),"\n",(0,s.jsx)(n.p,{children:"You can categorize your API pages with sections. Instead of the above style, you can do this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[[classOrder]]\r\nsection = "Section name"\r\nclasses = ["Class1", "Class2"]\r\n\r\n[[classOrder]]\r\nsection = "Another section name"\r\nclasses = ["Class3", "Class4"]\r\n\r\n[[classOrder]]\r\nsection = "Tag Section"\r\n# You can add tagged classes with \'@tag <tagName>\' to a section like this\r\ntag = "TagForClasses"\r\n\r\n[[classOrder]]\r\n# No section name will link classes at the root level of the sidebar\r\nclasses = ["Class5", "Class6"]\r\n\r\n[[classOrder]]\r\nsection = "Yet another section name"\r\ncollapsed = false # Determines with the section grouping is collapsed or expanded on page load. Defaults to true.\r\nclasses = ["Class7", "ClassAte", "Class9"]\n'})}),"\n",(0,s.jsx)(n.h4,{id:"automatic-sections-from-folders",children:"Automatic Sections from Folders"}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:"autoSectionPath"})," option to automatically categorize classes into sections based on the folder they are inside in your project."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'autoSectionPath = "packages"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["With this option set, folders inside ",(0,s.jsx)(n.code,{children:"YOUR_REPO/packages"})," will be automatically used as section names. Folders may be ",(0,s.jsx)(n.code,{children:"kebab-case"}),", ",(0,s.jsx)(n.code,{children:"PascalCase"}),", ",(0,s.jsx)(n.code,{children:"camelCase"}),", or ",(0,s.jsx)(n.code,{children:"sentence case"}),": they are automatically converted to ",(0,s.jsx)(n.code,{children:"Title Case"})," in the section name."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, a class defined in ",(0,s.jsx)(n.code,{children:"YOUR_REPO/packages/thing-doer/init.lua"})," will automatically be placed in a section called ",(0,s.jsx)(n.code,{children:"Thing Doer"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"table-of-contents-toc",children:"Table of Contents (TOC)"}),"\n",(0,s.jsxs)(n.p,{children:["You can customize categories in the Table of Contents of each API page. To create a category, first tag all items that should be included in the category with the ",(0,s.jsx)(n.code,{children:"@tag"})," tag."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"--[=[\r\n\tThis is a very fancy function that adds a couple numbers.\r\n\r\n\t@param a number -- The first number you want to add\r\n\t@param b number -- The second number you wanna add\r\n\t@return number -- Returns the sum of `a` and `b`\r\n\t@tag utility\r\n]=]\r\nfunction MyFirstClass:taggedFunction(a, b)\r\n\treturn a + b\r\nend\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Then, specify those tags under the ",(0,s.jsx)(n.code,{children:"apiCategories"})," option in your ",(0,s.jsx)(n.code,{children:"moonwave.toml"})," file."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'apiCategories = [\r\n    "constructor",\r\n    "utility",\r\n    "random"\r\n]\n'})}),"\n",(0,s.jsx)(n.h2,{id:"custom-home-page",children:"Custom home page"}),"\n",(0,s.jsxs)(n.p,{children:["By default your project's README is used as the homepage. To use a custom homepage, simply set ",(0,s.jsx)(n.code,{children:"enabled"})," to ",(0,s.jsx)(n.code,{children:"true"})," in the ",(0,s.jsx)(n.code,{children:"[home]"})," section:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[home]\r\nenabled = true\r\nincludeReadme = true # Optional\r\nbannerImage = "https://url" # Optional\r\n\r\n[[home.features]]\r\ntitle = "Feature 1"\r\ndescription = "This is a feature"\r\nimage = "https://url\r\n\r\n[[home.features]]\r\ntitle = "Feature 2"\r\ndescription = "This is a second feature"\r\nimage = "https://url\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Optionally, you can include ",(0,s.jsx)(n.code,{children:"includeReadme = true"}),", which will append your project's README to the end of the home page."]}),"\n",(0,s.jsx)(n.p,{children:"If your project's README begins with some content that you don't want included in your home page, you can place an HTML comment in your project's README that will not include any content before it."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"Project Logo, Project Name, Etc\r\n\x3c!--moonwave-hide-before-this-line--\x3e\r\nMy project is amazing and it does everything you could ever want.\n"})}),"\n",(0,s.jsx)(n.p,{children:"Only the content underneath the HTML comment will be included in your Moonwave homepage."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>i});var t=o(6540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);